
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Patches
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Ingress
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Patch Ingress
  shell: oc patch namespace default --type=json -p '[{"op":"add","path":"/metadata/labels","value":{"network.openshift.io/policy-group":"ingress"}}]'
  register: ingress_patched


# - name: CONFIG -             ðŸ©¹ Patch AIOpsAnalyticsOrchestrator Pull Secret
#   shell: oc patch AIOpsAnalyticsOrchestrator aiops -n {{ MCM_NAMESPACE }} --type merge  --patch-file ./templates/waiops/patches/analytics-pull-patch.yaml
#   ignore_errors: yes
#   register: irorchestrator_patched



# --------------------------------------------------------------------------------------------------------------------------------------
# Create Topology Routes
# --------------------------------------------------------------------------------------------------------------------------------------
- name: DEMO -               ðŸ”Ž Check Topology Routes
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: topology-merge
    namespace: "{{ MCM_NAMESPACE }}"
  register: K8S_EXISTS

- name: CONFIG -             ðŸš€ Create Topology Routes
  block:
  - name: CONFIG -             ðŸš€ Create Topology Route - topology-merge
    shell: oc create route passthrough topology-merge -n {{ MCM_NAMESPACE }} --insecure-policy="Redirect" --service=aiops-topology-merge --port=https-merge-api
    ignore_errors: yes
    when: CREATE_TOPO_ROUTE == true

  - name: CONFIG -             ðŸš€ Create Topology Route - topology-rest
    shell: oc create route passthrough topology-rest -n {{ MCM_NAMESPACE }} --insecure-policy="Redirect" --service=aiops-topology-rest-observer --port=https-rest-observer-admin
    ignore_errors: yes
    when: CREATE_TOPO_ROUTE == true

  - name: CONFIG -             ðŸš€ Create Topology Route - topology-manage
    shell: oc create route passthrough topology-manage -n {{ MCM_NAMESPACE }} --service=evtmanager-topology-topology --port=https-topology-api
    ignore_errors: yes
    when: CREATE_TOPO_ROUTE == true
  when: K8S_EXISTS.resources|length == 0



- name: CONFIG -             ðŸš€ Create external Routes
  block:
  - name: CONFIG -             ðŸš€ Create external Flink Job Manager Route
    shell: oc create route edge job-manager -n {{ MCM_NAMESPACE }} --service=CP4MCM-eventprocessor-eve-29ee-ep-jobmanager --port=ui
    ignore_errors: yes
    when: CREATE_EXTERNAL_ROUTES == true
        
  - name: CONFIG -             ðŸš€ Create external AI Manager API Route
    shell: oc create route passthrough ai-platform-api -n {{ MCM_NAMESPACE }}  --service=aimanager-aio-ai-platform-api-server --port=4000 --insecure-policy=Redirect --wildcard-policy=None
    ignore_errors: yes
    when: CREATE_EXTERNAL_ROUTES == true


  - name: CONFIG -             ðŸš€ Create external Datalayer API Route
    shell: oc create route reencrypt datalayer-api -n {{ MCM_NAMESPACE }}  --service=aiops-ir-core-ncodl-api --port=secure-port --insecure-policy=Redirect --wildcard-policy=None
    ignore_errors: yes
    when: CREATE_EXTERNAL_ROUTES == true


  
# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Cassandra Pod
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ•¦ Wait for Cassandra Pod to become available - this can take up to 45 minutes (hack for 3.2)
  shell: oc get po -n {{ MCM_NAMESPACE }} | grep aiops-topology-cassandra-0| grep 1/1| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Service Account
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Patch aiops-topology-service-account (hack for 3.2)
  shell: |
    oc patch -n {{ MCM_NAMESPACE }} serviceaccount aiops-topology-service-account -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
  ignore_errors: yes


# --------------------------------------------------------------------------------------------------------------------------------------
# Delete ImgPull error pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Delete Pods with ImgPull Error (hack for 3.2)
  shell: |
    oc delete pod --ignore-not-found $(oc get po -n {{ MCM_NAMESPACE }}|grep ImagePull|awk '{print$1}') -n {{ MCM_NAMESPACE }}
  ignore_errors: yes

  

# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Topology Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ•¦ Wait for Topology Pods to become available - this can take up to 45 minutes (hack for 3.2)
  shell: oc get po -n {{ MCM_NAMESPACE }} | grep aiops-topology-merge| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Topology Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CONFIG -             ðŸ©¹ Patch aiops-topology-merge (hack for 3.2)
  shell: oc patch deployment aiops-topology-merge -n {{ MCM_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-merge-patch.yaml
  ignore_errors: yes


- name: CONFIG -             ðŸ©¹ Patch aiops-topology-search (hack for 3.2)
  shell: oc patch deployment aiops-topology-search -n {{ MCM_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-search-patch.yaml
  ignore_errors: yes


- name: CONFIG -             ðŸ©¹ Patch aiops-topology-status (hack for 3.2)
  shell: oc patch deployment aiops-topology-status -n {{ MCM_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-status-patch.yaml
  ignore_errors: yes


- name: CONFIG -             ðŸ©¹ Patch aiops-topology-layout (hack for 3.2)
  shell: oc patch deployment aiops-topology-layout -n {{ MCM_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-layout-patch.yaml
  ignore_errors: yes


# # --------------------------------------------------------------------------------------------------------------------------------------
# # Wait for IR Analytics Pods
# # --------------------------------------------------------------------------------------------------------------------------------------
# - name: CONFIG -             ðŸ•¦ Wait for IR Analytics Pods to become available - this can take up to 45 minutes (hack for 3.2)
#   shell: oc get po -n {{ MCM_NAMESPACE }} | grep aiops-ir-analytics-probablecause| grep -c ""
#   register: kubectl_get_pods
#   until: kubectl_get_pods.stdout == "1"
#   retries: 500
#   delay: 15


# # --------------------------------------------------------------------------------------------------------------------------------------
# # Patch IR Analytics Pods
# # --------------------------------------------------------------------------------------------------------------------------------------
# - name: CONFIG -             ðŸ©¹ Patch IR Analytics Pods (hack for 3.2)
#   shell: |
#     oc patch -n {{ MCM_NAMESPACE }} serviceaccount aiops-topology-service-account -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ MCM_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-worker -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ MCM_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-pipeline-composer -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ MCM_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-master -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ MCM_NAMESPACE }} serviceaccount aiops-ir-analytics-probablecause -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ MCM_NAMESPACE }} serviceaccount aiops-ir-analytics-classifier -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ MCM_NAMESPACE }} serviceaccount aiops-ir-lifecycle-eventprocessor-ep -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc delete pod $(oc get po -n {{ MCM_NAMESPACE }}|grep ImagePull|awk '{print$1}') -n {{ MCM_NAMESPACE }}
#   ignore_errors: yes

